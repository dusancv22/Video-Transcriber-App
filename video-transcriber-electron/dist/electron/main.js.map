{"version":3,"file":"main.js","sources":["../../electron/main.ts"],"sourcesContent":["import { app, BrowserWindow, shell, ipcMain, dialog, globalShortcut } from 'electron'\r\nimport { join } from 'path'\r\nimport { spawn, ChildProcess } from 'child_process'\r\nimport { platform, homedir } from 'os'\r\n\r\n// The built directory structure\r\n//\r\n// ├─┬ dist-electron\r\n// │ ├─┬ main.js    > Electron main process\r\n// │ └─┬ preload.js > Preload scripts\r\n// ├─┬ dist\r\n// │ └── index.html > Electron renderer\r\n//\r\n\r\nconst isWin32 = platform() === 'win32'\r\nconst isDev = process.env.NODE_ENV === 'development'\r\nconst VITE_DEV_SERVER_URL = process.env.VITE_DEV_SERVER_URL\r\n\r\n// Python backend process\r\nlet pythonProcess: ChildProcess | null = null\r\n\r\nclass ElectronApp {\r\n  private mainWindow: BrowserWindow | null = null\r\n\r\n  constructor() {\r\n    this.setupEventHandlers()\r\n  }\r\n\r\n  private setupEventHandlers(): void {\r\n    // This method will be called when Electron has finished initialization\r\n    app.whenReady().then(() => {\r\n      this.createWindow()\r\n      // Skip Python backend startup - handled by start script\r\n      // this.startPythonBackend()\r\n      \r\n      app.on('activate', () => {\r\n        // On macOS it's common to re-create a window when dock icon is clicked\r\n        if (BrowserWindow.getAllWindows().length === 0) this.createWindow()\r\n      })\r\n    })\r\n\r\n    // Quit when all windows are closed, except on macOS\r\n    app.on('window-all-closed', () => {\r\n      if (process.platform !== 'darwin') {\r\n        this.cleanup()\r\n        app.quit()\r\n      }\r\n    })\r\n\r\n    // Handle app termination\r\n    app.on('before-quit', () => {\r\n      this.cleanup()\r\n    })\r\n\r\n    // Security: Prevent new window creation\r\n    app.on('web-contents-created', (_, contents) => {\r\n      contents.on('new-window', (navigationEvent, url) => {\r\n        navigationEvent.preventDefault()\r\n        shell.openExternal(url)\r\n      })\r\n    })\r\n  }\r\n\r\n  private async createWindow(): Promise<void> {\r\n    this.mainWindow = new BrowserWindow({\r\n      title: 'Video Transcriber',\r\n      width: 1200,\r\n      height: 800,\r\n      minWidth: 800,\r\n      minHeight: 600,\r\n      icon: join(process.env.VITE_PUBLIC || '.', 'icon.png'),\r\n      frame: false, // Remove native window chrome to prevent double title bar\r\n      webPreferences: {\r\n        preload: join(__dirname, './preload.js'),\r\n        nodeIntegration: false,\r\n        contextIsolation: true,\r\n        enableRemoteModule: false,\r\n        allowRunningInsecureContent: false,\r\n        experimentalFeatures: false\r\n      },\r\n      show: false, // Don't show until ready-to-show\r\n      titleBarStyle: process.platform === 'darwin' ? 'hiddenInset' : 'default'\r\n    })\r\n\r\n    // Show window when ready to prevent visual flash\r\n    this.mainWindow.once('ready-to-show', () => {\r\n      this.mainWindow?.show()\r\n    })\r\n\r\n    // Load the remote URL for development or the local html file for production\r\n    if (VITE_DEV_SERVER_URL) {\r\n      await this.mainWindow.loadURL(VITE_DEV_SERVER_URL)\r\n    } else {\r\n      await this.mainWindow.loadFile(join(__dirname, '../index.html'))\r\n    }\r\n\r\n    // Handle window closed\r\n    this.mainWindow.on('closed', () => {\r\n      this.mainWindow = null\r\n    })\r\n\r\n    // Prevent navigation to external URLs\r\n    this.mainWindow.webContents.on('will-navigate', (event, url) => {\r\n      if (url !== this.mainWindow?.webContents.getURL()) {\r\n        event.preventDefault()\r\n        shell.openExternal(url)\r\n      }\r\n    })\r\n\r\n    // Handle file drops at the main process level\r\n    this.setupFileDropHandling()\r\n\r\n    // Register F12 shortcut to toggle DevTools\r\n    this.registerDevToolsShortcut()\r\n  }\r\n\r\n  private setupFileDropHandling(): void {\r\n    if (!this.mainWindow) return\r\n\r\n    // Prevent navigation to dropped files (security measure)\r\n    this.mainWindow.webContents.on('will-navigate', (event, navigationUrl) => {\r\n      if (navigationUrl.startsWith('file://')) {\r\n        event.preventDefault()\r\n        // Extract file path and handle as drop\r\n        const filePath = decodeURIComponent(navigationUrl.replace('file:///', ''))\r\n        console.log('File drop via navigation detected:', filePath)\r\n        this.handleFileDropFromPath([filePath])\r\n      }\r\n    })\r\n\r\n    // Set up native drag-drop handling in renderer\r\n    this.mainWindow.webContents.on('dom-ready', () => {\r\n      this.mainWindow?.webContents.executeJavaScript(`\r\n        // Enhanced drag-drop with native file path support\r\n        document.addEventListener('dragover', (e) => {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          e.dataTransfer.dropEffect = 'copy';\r\n        });\r\n        \r\n        document.addEventListener('drop', async (e) => {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          \r\n          console.log('🎯 Drop event detected - processing files...');\r\n          \r\n          // Get the files from the drop event\r\n          const files = Array.from(e.dataTransfer.files);\r\n          \r\n          if (files.length === 0) {\r\n            console.log('❌ No files found in drop event');\r\n            return;\r\n          }\r\n          \r\n          // Extract file paths - in Electron, the File object has a 'path' property\r\n          const filePaths = files\r\n            .map(file => {\r\n              // In Electron context, files have a 'path' property with the full system path\r\n              const path = file.path || '';\r\n              console.log('📁 File:', file.name, '-> Path:', path);\r\n              return path;\r\n            })\r\n            .filter(path => path && path.length > 0);\r\n          \r\n          console.log('📋 Extracted file paths:', filePaths);\r\n          \r\n          if (filePaths.length > 0) {\r\n            // Send file paths directly to renderer\r\n            window.postMessage({\r\n              type: 'native-file-drop',\r\n              filePaths: filePaths\r\n            }, '*');\r\n            \r\n            console.log('✅ File paths sent to renderer via postMessage');\r\n          } else {\r\n            console.log('⚠️ No valid file paths extracted from drop');\r\n          }\r\n        });\r\n        \r\n        console.log('🔧 Native drop handlers installed');\r\n      `)\r\n    })\r\n  }\r\n\r\n  private handleFileDropFromPath(filePaths: string[]): void {\r\n    if (!this.mainWindow || filePaths.length === 0) return\r\n    \r\n    console.log('Processing dropped file paths:', filePaths)\r\n    \r\n    // Send to renderer process\r\n    this.mainWindow.webContents.postMessage('native-file-drop', {\r\n      type: 'native-file-drop', \r\n      filePaths: filePaths\r\n    })\r\n  }\r\n\r\n  private registerDevToolsShortcut(): void {\r\n    // Register multiple shortcuts to toggle DevTools (important for frameless window)\r\n    const toggleDevTools = () => {\r\n      if (this.mainWindow && this.mainWindow.webContents) {\r\n        if (this.mainWindow.webContents.isDevToolsOpened()) {\r\n          this.mainWindow.webContents.closeDevTools()\r\n        } else {\r\n          this.mainWindow.webContents.openDevTools({ mode: 'detach' })\r\n        }\r\n      }\r\n    }\r\n\r\n    // Register F12 globally\r\n    globalShortcut.register('F12', toggleDevTools)\r\n    \r\n    // Also register Ctrl+Shift+I as alternative\r\n    globalShortcut.register('CommandOrControl+Shift+I', toggleDevTools)\r\n    \r\n    // Register Ctrl+Shift+J for console specifically\r\n    globalShortcut.register('CommandOrControl+Shift+J', () => {\r\n      if (this.mainWindow && this.mainWindow.webContents) {\r\n        this.mainWindow.webContents.openDevTools({ mode: 'detach', activate: true })\r\n      }\r\n    })\r\n\r\n    console.log('DevTools shortcuts registered: F12, Ctrl+Shift+I, Ctrl+Shift+J')\r\n  }\r\n\r\n  private startPythonBackend(): void {\r\n    try {\r\n      const pythonExecutable = isDev ? 'python' : join(process.resourcesPath, 'python-backend', 'python')\r\n      const scriptPath = isDev \r\n        ? join(__dirname, '../../backend/main.py')\r\n        : join(process.resourcesPath, 'python-backend', 'main.py')\r\n\r\n      console.log('Starting Python backend:', pythonExecutable, scriptPath)\r\n\r\n      pythonProcess = spawn(pythonExecutable, [scriptPath], {\r\n        cwd: isDev ? join(__dirname, '../../') : process.resourcesPath,\r\n        stdio: ['pipe', 'pipe', 'pipe'],\r\n        env: {\r\n          ...process.env,\r\n          PYTHONUNBUFFERED: '1'\r\n        }\r\n      })\r\n\r\n      pythonProcess.stdout?.on('data', (data) => {\r\n        console.log('Python backend stdout:', data.toString())\r\n      })\r\n\r\n      pythonProcess.stderr?.on('data', (data) => {\r\n        console.error('Python backend stderr:', data.toString())\r\n      })\r\n\r\n      pythonProcess.on('close', (code) => {\r\n        console.log(`Python backend process exited with code ${code}`)\r\n        pythonProcess = null\r\n      })\r\n\r\n      pythonProcess.on('error', (error) => {\r\n        console.error('Failed to start Python backend:', error)\r\n        this.showErrorDialog('Backend Error', 'Failed to start Python backend. Please check your installation.')\r\n      })\r\n\r\n    } catch (error) {\r\n      console.error('Error starting Python backend:', error)\r\n      this.showErrorDialog('Startup Error', 'Failed to initialize the application backend.')\r\n    }\r\n  }\r\n\r\n  private cleanup(): void {\r\n    // Unregister all global shortcuts\r\n    globalShortcut.unregisterAll()\r\n    \r\n    if (pythonProcess) {\r\n      console.log('Terminating Python backend process...')\r\n      \r\n      if (isWin32) {\r\n        spawn('taskkill', ['/pid', pythonProcess.pid?.toString() || '', '/f', '/t'])\r\n      } else {\r\n        pythonProcess.kill('SIGTERM')\r\n      }\r\n      \r\n      pythonProcess = null\r\n    }\r\n  }\r\n\r\n  private showErrorDialog(title: string, content: string): void {\r\n    dialog.showErrorBox(title, content)\r\n  }\r\n}\r\n\r\n// Initialize the Electron application\r\nnew ElectronApp()\r\n\r\n// IPC handlers for secure communication with renderer process\r\nipcMain.handle('app:getVersion', () => {\r\n  return app.getVersion()\r\n})\r\n\r\nipcMain.handle('app:getPlatform', () => {\r\n  return process.platform\r\n})\r\n\r\nipcMain.handle('dialog:showOpenDialog', async (_, options) => {\r\n  if (!BrowserWindow.getFocusedWindow()) return { canceled: true }\r\n  \r\n  const result = await dialog.showOpenDialog(BrowserWindow.getFocusedWindow()!, options)\r\n  return result\r\n})\r\n\r\nipcMain.handle('dialog:showSaveDialog', async (_, options) => {\r\n  if (!BrowserWindow.getFocusedWindow()) return { canceled: true }\r\n  \r\n  const result = await dialog.showSaveDialog(BrowserWindow.getFocusedWindow()!, options)\r\n  return result\r\n})\r\n\r\nipcMain.handle('shell:openExternal', async (_, url: string) => {\r\n  await shell.openExternal(url)\r\n})\r\n\r\nipcMain.handle('shell:showItemInFolder', (_, fullPath: string) => {\r\n  shell.showItemInFolder(fullPath)\r\n})\r\n\r\n// Path utilities for safe directory handling\r\nipcMain.handle('path:getDefaultOutputDirectory', async () => {\r\n  try {\r\n    // Get user's Documents folder and create a Video Transcriber subfolder\r\n    const documentsPath = join(homedir(), 'Documents', 'Video Transcriber')\r\n    return documentsPath.replace(/\\\\/g, '/') // Normalize path separators\r\n  } catch (error) {\r\n    console.error('Failed to get default output directory:', error)\r\n    // Fallback to app's working directory\r\n    return './Video Transcriber Output'\r\n  }\r\n})\r\n\r\nipcMain.handle('path:getUserDocumentsPath', async () => {\r\n  try {\r\n    const documentsPath = join(homedir(), 'Documents')\r\n    return documentsPath.replace(/\\\\/g, '/')\r\n  } catch (error) {\r\n    console.error('Failed to get user documents path:', error)\r\n    return './'\r\n  }\r\n})\r\n\r\n// File handling utilities for drag-and-drop operations\r\n// Note: Drag-drop is now handled natively in setupFileDropHandling()\r\n// These IPC handlers are kept for backward compatibility but are no longer used\r\nipcMain.handle('file:getFilePathsFromDrop', async (_, fileData: Array<{name: string, size: number, type: string, lastModified: number}>) => {\r\n  console.log('Legacy getFilePathsFromDrop called - native drop handling is now used instead')\r\n  console.log('Files requested:', fileData.map(f => f.name))\r\n  return [] // Always return empty - native handling is used\r\n})\r\n\r\nipcMain.handle('file:selectVideoFiles', async () => {\r\n  try {\r\n    const focusedWindow = BrowserWindow.getFocusedWindow()\r\n    if (!focusedWindow) return []\r\n    \r\n    const result = await dialog.showOpenDialog(focusedWindow, {\r\n      properties: ['openFile', 'multiSelections'],\r\n      filters: [\r\n        { name: 'Video Files', extensions: ['mp4', 'avi', 'mkv', 'mov'] },\r\n        { name: 'All Files', extensions: ['*'] }\r\n      ],\r\n      title: 'Select Video Files to Transcribe'\r\n    })\r\n    \r\n    if (result.canceled || !result.filePaths) {\r\n      return []\r\n    }\r\n    \r\n    return result.filePaths\r\n  } catch (error) {\r\n    console.error('Failed to select video files:', error)\r\n    return []\r\n  }\r\n})\r\n\r\n// Window control handlers for frameless window\r\nipcMain.handle('window:close', () => {\r\n  const focusedWindow = BrowserWindow.getFocusedWindow()\r\n  if (focusedWindow) {\r\n    focusedWindow.close()\r\n  }\r\n})\r\n\r\nipcMain.handle('window:minimize', () => {\r\n  const focusedWindow = BrowserWindow.getFocusedWindow()\r\n  if (focusedWindow) {\r\n    focusedWindow.minimize()\r\n  }\r\n})\r\n\r\nipcMain.handle('window:maximize', () => {\r\n  const focusedWindow = BrowserWindow.getFocusedWindow()\r\n  if (focusedWindow) {\r\n    if (focusedWindow.isMaximized()) {\r\n      focusedWindow.unmaximize()\r\n    } else {\r\n      focusedWindow.maximize()\r\n    }\r\n  }\r\n})\r\n\r\nipcMain.handle('window:toggleDevTools', () => {\r\n  const focusedWindow = BrowserWindow.getFocusedWindow()\r\n  if (focusedWindow) {\r\n    if (focusedWindow.webContents.isDevToolsOpened()) {\r\n      focusedWindow.webContents.closeDevTools()\r\n    } else {\r\n      focusedWindow.webContents.openDevTools({ mode: 'detach' })\r\n    }\r\n  }\r\n})\r\n\r\n// Handle app protocol for deep linking (optional)\r\nif (process.defaultApp) {\r\n  if (process.argv.length >= 2) {\r\n    app.setAsDefaultProtocolClient('video-transcriber', process.execPath, [join(__dirname, '../')])\r\n  }\r\n} else {\r\n  app.setAsDefaultProtocolClient('video-transcriber')\r\n}"],"names":["platform","app","BrowserWindow","shell","join","globalShortcut","spawn","dialog","ipcMain","homedir"],"mappings":"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"}